{"ast":null,"code":"import _classCallCheck from \"/Users/Holt/Documents/real-pro/wedding-page/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Holt/Documents/real-pro/wedding-page/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Holt/Documents/real-pro/wedding-page/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Holt/Documents/real-pro/wedding-page/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Holt/Documents/real-pro/wedding-page/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/Holt/Documents/real-pro/wedding-page/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/Holt/Documents/real-pro/wedding-page/src/components/MapDisplay.js\";\nimport React from 'react';\nimport GoogleMapReact from 'google-map-react';\nimport MapMarker from './MapMarker';\nimport AboutModal from './AboutModal';\nimport api from '../data/apiKey';\nimport '../style/MapDisplay.css';\n\nvar MapDisplay =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(MapDisplay, _React$Component);\n\n  function MapDisplay(props) {\n    var _this;\n\n    _classCallCheck(this, MapDisplay);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MapDisplay).call(this, props));\n\n    _this.handleClick = function (e) {\n      // we set the data-name attribute on the marker because some markers\n      // have text and others don't, this way we can grab desc, etc.\n      var text = e.target.attributes[\"data-name\"].value;\n      var info = _this.state.aboutValues[text];\n\n      _this.setState({\n        showModal: true,\n        modalInfo: {\n          title: text,\n          description: info[2]\n        }\n      });\n    };\n\n    _this.handleClose = function () {\n      _this.setState({\n        showModal: false,\n        modalInfo: {}\n      });\n    };\n\n    _this.state = {\n      sheetLoaded: false,\n      aboutValues: props.aboutValues,\n      showModal: false,\n      onlyMains: props.onlyMains,\n      modalInfo: {},\n      zoom: 13,\n      center: {\n        lat: 40.6259,\n        lng: -75.3705\n      }\n    };\n    _this.handleClick = _this.handleClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleClose = _this.handleClose.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  } // componentDidMount() {\n  //   if(this.state.sheetLoaded){\n  //     return;\n  //   }\n  //   var sheetData = dataAccess.googleSheets('sheet5', this.stateDataCallback).then((data) =>{\n  //     this.setState({\n  //       sheetLoaded: true,\n  //       aboutValues: data\n  //     })\n  //   })\n  //   if(window.innerWidth < 1000 && this.state.zoom >= 13){\n  //     this.setState({\n  //       zoom: 17,\n  //       center: {\n  //         lat: 40.62,\n  //         lng: -75.3825\n  //       }\n  //     })\n  //   }\n  // }\n  // stateDataCallback = (data) => {\n  //   var values = {}\n  //   data.valueRanges[0].values.forEach((value) => {\n  //     // lat is the first column, lng is the second column, the name of\n  //     // the marker is the third column, description is the fourth,\n  //     // and the fifth column is whether or not it's a main marker\n  //     values[value[2]] = [parseFloat(value[0]), parseFloat(value[1]), value[3], value[4] === \"TRUE\"]\n  //   })\n  //   return values\n  // }\n\n\n  _createClass(MapDisplay, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      // create the markers based on what's in the sheet\n      var markers = this.state.sheetLoaded ? Object.keys(this.state.aboutValues).map(function (key, index) {\n        var value = _this2.state.aboutValues[key];\n        var isMain = value[3];\n\n        if (_this2.state.onlyMains && !isMain) {\n          return;\n        }\n\n        return React.createElement(MapMarker, {\n          key: index,\n          lat: value[0],\n          lng: value[1],\n          text: key,\n          handleClick: _this2.handleClick,\n          isMain: value[3],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91\n          },\n          __self: this\n        });\n      }) : null;\n      var mapsDefaultInfo = {\n        center: this.state.center,\n        zoom: this.state.zoom\n      };\n      return React.createElement(\"div\", {\n        id: \"map-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(GoogleMapReact, {\n        defaultCenter: mapsDefaultInfo.center,\n        defaultZoom: mapsDefaultInfo.zoom,\n        bootstrapURLKeys: {\n          key: api.mapsApiKey\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, markers), React.createElement(AboutModal, {\n        modalInfo: this.state.modalInfo,\n        showModal: this.state.showModal,\n        handleClose: this.handleClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return MapDisplay;\n}(React.Component);\n\nexport default MapDisplay;","map":{"version":3,"sources":["/Users/Holt/Documents/real-pro/wedding-page/src/components/MapDisplay.js"],"names":["React","GoogleMapReact","MapMarker","AboutModal","api","MapDisplay","props","handleClick","e","text","target","attributes","value","info","state","aboutValues","setState","showModal","modalInfo","title","description","handleClose","sheetLoaded","onlyMains","zoom","center","lat","lng","bind","markers","Object","keys","map","key","index","isMain","mapsDefaultInfo","mapsApiKey","Component"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AAEA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,GAAP,MAAgB,gBAAhB;AACA,OAAO,yBAAP;;IAEMC,U;;;;;AACF,sBAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AAChB,oFAAMA,KAAN;;AADgB,UAkDlBC,WAlDkB,GAkDJ,UAACC,CAAD,EAAO;AACnB;AACA;AACA,UAAIC,IAAI,GAAGD,CAAC,CAACE,MAAF,CAASC,UAAT,CAAoB,WAApB,EAAiCC,KAA5C;AACA,UAAIC,IAAI,GAAG,MAAKC,KAAL,CAAWC,WAAX,CAAuBN,IAAvB,CAAX;;AACA,YAAKO,QAAL,CAAc;AACZC,QAAAA,SAAS,EAAE,IADC;AAEZC,QAAAA,SAAS,EAAE;AACTC,UAAAA,KAAK,EAAEV,IADE;AAETW,UAAAA,WAAW,EAAEP,IAAI,CAAC,CAAD;AAFR;AAFC,OAAd;AAOD,KA9DiB;;AAAA,UAgElBQ,WAhEkB,GAgEJ,YAAM;AAClB,YAAKL,QAAL,CAAc;AACZC,QAAAA,SAAS,EAAE,KADC;AAEZC,QAAAA,SAAS,EAAE;AAFC,OAAd;AAID,KArEiB;;AAEhB,UAAKJ,KAAL,GAAa;AACXQ,MAAAA,WAAW,EAAE,KADF;AAEXP,MAAAA,WAAW,EAAET,KAAK,CAACS,WAFR;AAGXE,MAAAA,SAAS,EAAE,KAHA;AAIXM,MAAAA,SAAS,EAAEjB,KAAK,CAACiB,SAJN;AAKXL,MAAAA,SAAS,EAAE,EALA;AAMXM,MAAAA,IAAI,EAAE,EANK;AAOXC,MAAAA,MAAM,EAAE;AACNC,QAAAA,GAAG,EAAE,OADC;AAENC,QAAAA,GAAG,EAAE,CAAC;AAFA;AAPG,KAAb;AAYA,UAAKpB,WAAL,GAAmB,MAAKA,WAAL,CAAiBqB,IAAjB,uDAAnB;AACA,UAAKP,WAAL,GAAmB,MAAKA,WAAL,CAAiBO,IAAjB,uDAAnB;AAfgB;AAgBjB,G,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;6BAuBQ;AAAA;;AAEN;AACA,UAAIC,OAAO,GAAG,KAAKf,KAAL,CAAWQ,WAAX,GACZQ,MAAM,CAACC,IAAP,CAAY,KAAKjB,KAAL,CAAWC,WAAvB,EAAoCiB,GAApC,CAAwC,UAACC,GAAD,EAAMC,KAAN,EAAgB;AACpD,YAAItB,KAAK,GAAG,MAAI,CAACE,KAAL,CAAWC,WAAX,CAAuBkB,GAAvB,CAAZ;AACA,YAAIE,MAAM,GAAGvB,KAAK,CAAC,CAAD,CAAlB;;AACA,YAAG,MAAI,CAACE,KAAL,CAAWS,SAAX,IAAwB,CAACY,MAA5B,EAAmC;AAC/B;AACH;;AACD,eAAO,oBAAC,SAAD;AAAW,UAAA,GAAG,EAAED,KAAhB;AACW,UAAA,GAAG,EAAEtB,KAAK,CAAC,CAAD,CADrB;AAEW,UAAA,GAAG,EAAEA,KAAK,CAAC,CAAD,CAFrB;AAGW,UAAA,IAAI,EAAEqB,GAHjB;AAIW,UAAA,WAAW,EAAE,MAAI,CAAC1B,WAJ7B;AAKW,UAAA,MAAM,EAAEK,KAAK,CAAC,CAAD,CALxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAMH,OAZD,CADY,GAcV,IAdJ;AAeE,UAAIwB,eAAe,GAAG;AACpBX,QAAAA,MAAM,EAAE,KAAKX,KAAL,CAAWW,MADC;AAEpBD,QAAAA,IAAI,EAAE,KAAKV,KAAL,CAAWU;AAFG,OAAtB;AAIF,aACI;AAAK,QAAA,EAAE,EAAC,eAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,cAAD;AACE,QAAA,aAAa,EAAEY,eAAe,CAACX,MADjC;AAEE,QAAA,WAAW,EAAEW,eAAe,CAACZ,IAF/B;AAGE,QAAA,gBAAgB,EAAE;AAChBS,UAAAA,GAAG,EAAE7B,GAAG,CAACiC;AADO,SAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAMGR,OANH,CADF,EASE,oBAAC,UAAD;AAAY,QAAA,SAAS,EAAE,KAAKf,KAAL,CAAWI,SAAlC;AACY,QAAA,SAAS,EAAE,KAAKJ,KAAL,CAAWG,SADlC;AAEY,QAAA,WAAW,EAAE,KAAKI,WAF9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QATF,CADJ;AAeD;;;;EA7GoBrB,KAAK,CAACsC,S;;AAgH/B,eAAejC,UAAf","sourcesContent":["import React from 'react'\nimport GoogleMapReact from 'google-map-react';\n\nimport MapMarker from './MapMarker'\nimport AboutModal from './AboutModal'\nimport api from '../data/apiKey'\nimport '../style/MapDisplay.css';\n\nclass MapDisplay extends React.Component {\n    constructor(props){\n      super(props)\n      this.state = {\n        sheetLoaded: false,\n        aboutValues: props.aboutValues,\n        showModal: false,\n        onlyMains: props.onlyMains,\n        modalInfo: {},\n        zoom: 13,\n        center: {\n          lat: 40.6259,\n          lng: -75.3705\n        }\n      }\n      this.handleClick = this.handleClick.bind(this)\n      this.handleClose = this.handleClose.bind(this)\n    }\n\n    // componentDidMount() {\n    //   if(this.state.sheetLoaded){\n    //     return;\n    //   }\n    //   var sheetData = dataAccess.googleSheets('sheet5', this.stateDataCallback).then((data) =>{\n    //     this.setState({\n    //       sheetLoaded: true,\n    //       aboutValues: data\n    //     })\n    //   })\n    //   if(window.innerWidth < 1000 && this.state.zoom >= 13){\n    //     this.setState({\n    //       zoom: 17,\n    //       center: {\n    //         lat: 40.62,\n    //         lng: -75.3825\n    //       }\n    //     })\n    //   }\n    // }\n\n    // stateDataCallback = (data) => {\n    //   var values = {}\n    //   data.valueRanges[0].values.forEach((value) => {\n    //     // lat is the first column, lng is the second column, the name of\n    //     // the marker is the third column, description is the fourth,\n    //     // and the fifth column is whether or not it's a main marker\n    //     values[value[2]] = [parseFloat(value[0]), parseFloat(value[1]), value[3], value[4] === \"TRUE\"]\n    //   })\n    //   return values\n    // }\n\n    handleClick = (e) => {\n      // we set the data-name attribute on the marker because some markers\n      // have text and others don't, this way we can grab desc, etc.\n      var text = e.target.attributes[\"data-name\"].value\n      var info = this.state.aboutValues[text]\n      this.setState({\n        showModal: true,\n        modalInfo: {\n          title: text,\n          description: info[2]\n        }\n      })\n    }\n\n    handleClose = () => {\n      this.setState({\n        showModal: false,\n        modalInfo: {}\n      })\n    }\n\n    render(){\n\n      // create the markers based on what's in the sheet\n      let markers = this.state.sheetLoaded ?\n        Object.keys(this.state.aboutValues).map((key, index) => {\n            let value = this.state.aboutValues[key]\n            let isMain = value[3];\n            if(this.state.onlyMains && !isMain){\n                return;\n            }\n            return <MapMarker key={index}\n                              lat={value[0]}\n                              lng={value[1]}\n                              text={key}\n                              handleClick={this.handleClick}\n                              isMain={value[3]} />\n        })\n        : null\n        let mapsDefaultInfo = {\n          center: this.state.center,\n          zoom: this.state.zoom\n        };\n      return (\n          <div id=\"map-container\">\n            <GoogleMapReact\n              defaultCenter={mapsDefaultInfo.center}\n              defaultZoom={mapsDefaultInfo.zoom}\n              bootstrapURLKeys={{\n                key: api.mapsApiKey,\n              }}>\n              {markers}\n            </GoogleMapReact>\n            <AboutModal modalInfo={this.state.modalInfo}\n                        showModal={this.state.showModal}\n                        handleClose={this.handleClose} />\n          </div>\n      )\n    }\n}\n\nexport default MapDisplay\n"]},"metadata":{},"sourceType":"module"}