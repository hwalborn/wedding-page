{"ast":null,"code":"import _classCallCheck from \"/Users/Holt/Documents/real-pro/wedding-page/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Holt/Documents/real-pro/wedding-page/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Holt/Documents/real-pro/wedding-page/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Holt/Documents/real-pro/wedding-page/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Holt/Documents/real-pro/wedding-page/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/Holt/Documents/real-pro/wedding-page/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/Holt/Documents/real-pro/wedding-page/src/components/MapDisplay.js\";\nimport React from 'react';\nimport GoogleMapReact from 'google-map-react';\nimport dataAccess from '../data/dataAccess';\nimport MapMarker from './MapMarker';\nimport AboutModal from './AboutModal';\nimport api from '../data/apiKey';\nimport '../style/MapDisplay.css';\n\nvar MapDisplay =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(MapDisplay, _React$Component);\n\n  function MapDisplay(props) {\n    var _this;\n\n    _classCallCheck(this, MapDisplay);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MapDisplay).call(this, props));\n\n    _this.stateDataCallback = function (data) {\n      var values = {};\n      data.valueRanges[0].values.forEach(function (value) {\n        // lat is the first column, lng is the second column, the name of\n        // the marker is the third column, description is the fourth,\n        // and the fifth column is whether or not it's a main marker\n        values[value[2]] = [parseFloat(value[0]), parseFloat(value[1]), value[3], value[4] === \"TRUE\"];\n      });\n      return values;\n    };\n\n    _this.handleClick = function (e) {\n      // we set the data-name attribute on the marker because some markers\n      // have text and others don't, this way we can grab desc, etc.\n      var text = e.target.attributes[\"data-name\"].value;\n      var info = _this.state.aboutValues[text];\n\n      _this.setState({\n        showModal: true,\n        modalInfo: {\n          title: text,\n          description: info[2]\n        }\n      });\n    };\n\n    _this.handleClose = function () {\n      _this.setState({\n        showModal: false,\n        modalInfo: {}\n      });\n    };\n\n    _this.state = {\n      sheetLoaded: false,\n      aboutValues: {},\n      showModal: false,\n      modalInfo: {},\n      zoom: 13,\n      center: {\n        lat: 40.6259,\n        lng: -75.3705\n      }\n    };\n    _this.handleClick = _this.handleClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleClose = _this.handleClose.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(MapDisplay, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      if (this.state.sheetLoaded) {\n        return;\n      }\n\n      var sheetData = dataAccess.googleSheets('sheet5', this.stateDataCallback).then(function (data) {\n        _this2.setState({\n          sheetLoaded: true,\n          aboutValues: data\n        });\n      });\n\n      if (window.innerWidth < 1000 && this.state.zoom >= 13) {\n        this.setState({\n          zoom: 17,\n          center: {\n            lat: 40.62,\n            lng: -75.3825\n          }\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      // create the markers based on what's in the sheet\n      var markers = this.state.sheetLoaded ? Object.keys(this.state.aboutValues).map(function (key, index) {\n        var value = _this3.state.aboutValues[key];\n        return React.createElement(MapMarker, {\n          key: index,\n          lat: value[0],\n          lng: value[1],\n          text: key,\n          handleClick: _this3.handleClick,\n          isMain: value[3],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89\n          },\n          __self: this\n        });\n      }) : null;\n      var mapsDefaultInfo = {\n        center: this.state.center,\n        zoom: this.state.zoom\n      };\n      return React.createElement(\"div\", {\n        id: \"map-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(GoogleMapReact, {\n        defaultCenter: mapsDefaultInfo.center,\n        defaultZoom: mapsDefaultInfo.zoom,\n        bootstrapURLKeys: {\n          key: api.mapsApiKey\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, markers), React.createElement(AboutModal, {\n        modalInfo: this.state.modalInfo,\n        showModal: this.state.showModal,\n        handleClose: this.handleClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return MapDisplay;\n}(React.Component);\n\nexport default MapDisplay;","map":{"version":3,"sources":["/Users/Holt/Documents/real-pro/wedding-page/src/components/MapDisplay.js"],"names":["React","GoogleMapReact","dataAccess","MapMarker","AboutModal","api","MapDisplay","props","stateDataCallback","data","values","valueRanges","forEach","value","parseFloat","handleClick","e","text","target","attributes","info","state","aboutValues","setState","showModal","modalInfo","title","description","handleClose","sheetLoaded","zoom","center","lat","lng","bind","sheetData","googleSheets","then","window","innerWidth","markers","Object","keys","map","key","index","mapsDefaultInfo","mapsApiKey","Component"],"mappings":"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","sourcesContent":["import React from 'react'\nimport GoogleMapReact from 'google-map-react';\n\nimport dataAccess from '../data/dataAccess'\nimport MapMarker from './MapMarker'\nimport AboutModal from './AboutModal'\nimport api from '../data/apiKey'\nimport '../style/MapDisplay.css';\n\nclass MapDisplay extends React.Component {\n    constructor(props){\n      super(props)\n      this.state = {\n        sheetLoaded: false,\n        aboutValues: {},\n        showModal: false,\n        modalInfo: {},\n        zoom: 13,\n        center: {\n          lat: 40.6259,\n          lng: -75.3705\n        }\n      }\n      this.handleClick = this.handleClick.bind(this)\n      this.handleClose = this.handleClose.bind(this)\n    }\n\n    componentDidMount() {\n      if(this.state.sheetLoaded){\n        return;\n      }\n      var sheetData = dataAccess.googleSheets('sheet5', this.stateDataCallback).then((data) =>{\n        this.setState({\n          sheetLoaded: true,\n          aboutValues: data\n        })\n      })\n      if(window.innerWidth < 1000 && this.state.zoom >= 13){\n        this.setState({\n          zoom: 17,\n          center: {\n            lat: 40.62,\n            lng: -75.3825\n          }\n        })\n      }\n    }\n\n    stateDataCallback = (data) => {\n      var values = {}\n      data.valueRanges[0].values.forEach((value) => {\n        // lat is the first column, lng is the second column, the name of\n        // the marker is the third column, description is the fourth,\n        // and the fifth column is whether or not it's a main marker\n        values[value[2]] = [parseFloat(value[0]), parseFloat(value[1]), value[3], value[4] === \"TRUE\"]\n      })\n      return values\n    }\n\n    handleClick = (e) => {\n      // we set the data-name attribute on the marker because some markers\n      // have text and others don't, this way we can grab desc, etc.\n      var text = e.target.attributes[\"data-name\"].value\n      var info = this.state.aboutValues[text]\n      this.setState({\n        showModal: true,\n        modalInfo: {\n          title: text,\n          description: info[2]\n        }\n      })\n    }\n\n    handleClose = () => {\n      this.setState({\n        showModal: false,\n        modalInfo: {}\n      })\n    }\n\n\n\n    render(){\n\n      // create the markers based on what's in the sheet\n      let markers = this.state.sheetLoaded ?\n        Object.keys(this.state.aboutValues).map((key, index) => {\n            let value = this.state.aboutValues[key]\n            return <MapMarker key={index}\n                              lat={value[0]}\n                              lng={value[1]}\n                              text={key}\n                              handleClick={this.handleClick}\n                              isMain={value[3]} />\n        })\n        : null\n        let mapsDefaultInfo = {\n          center: this.state.center,\n          zoom: this.state.zoom\n        };\n      return (\n          <div id=\"map-container\">\n            <GoogleMapReact\n              defaultCenter={mapsDefaultInfo.center}\n              defaultZoom={mapsDefaultInfo.zoom}\n              bootstrapURLKeys={{\n                key: api.mapsApiKey,\n              }}>\n              {markers}\n            </GoogleMapReact>\n            <AboutModal modalInfo={this.state.modalInfo}\n                        showModal={this.state.showModal}\n                        handleClose={this.handleClose} />\n          </div>\n      )\n    }\n}\n\nexport default MapDisplay\n"]},"metadata":{},"sourceType":"module"}